<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0621.1547                               -->
<workbook original-version='18.1' source-build='2019.2.1 (20192.19.0621.1547)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='CPDelicacy.Restaurant+ (BUDT758_DB_0504_05)' inline='true' name='federated.0kff4bj0qapr1y1b0jz4z0o44gi5' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='mssqllab.rhsmith.umd.edu,9758' name='sqlserver.141zk2r029hc0k163jj0t0rhzkdn'>
            <connection authentication='sqlserver' class='sqlserver' dbname='BUDT758_DB_0504_05' odbc-native-protocol='yes' one-time-sql='' server='mssqllab.rhsmith.umd.edu,9758' username='BUDT758_Student_227' />
          </named-connection>
        </named-connections>
        <relation join='full' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[CPDelicacy.Accept].[payId]' />
              <expression op='[CPDelicacy.Payment].[payId]' />
            </expression>
          </clause>
          <relation join='full' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[CPDelicacy.Restaurant].[restId]' />
                <expression op='[CPDelicacy.Accept].[restId]' />
              </expression>
            </clause>
            <relation join='left' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[CPDelicacy.Register].[appId]' />
                  <expression op='[CPDelicacy.App].[appId]' />
                </expression>
              </clause>
              <relation join='left' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[CPDelicacy.Restaurant].[restId]' />
                    <expression op='[CPDelicacy.Register].[restId]' />
                  </expression>
                </clause>
                <relation join='full' type='join'>
                  <clause type='join'>
                    <expression op='='>
                      <expression op='[CPDelicacy.Offer].[cuiId]' />
                      <expression op='[CPDelicacy.Cuisine].[cuiId]' />
                    </expression>
                  </clause>
                  <relation join='full' type='join'>
                    <clause type='join'>
                      <expression op='='>
                        <expression op='[CPDelicacy.Restaurant].[restId]' />
                        <expression op='[CPDelicacy.Offer].[restId]' />
                      </expression>
                    </clause>
                    <relation connection='sqlserver.141zk2r029hc0k163jj0t0rhzkdn' name='CPDelicacy.Restaurant' table='[dbo].[CPDelicacy.Restaurant]' type='table' />
                    <relation connection='sqlserver.141zk2r029hc0k163jj0t0rhzkdn' name='CPDelicacy.Offer' table='[dbo].[CPDelicacy.Offer]' type='table' />
                  </relation>
                  <relation connection='sqlserver.141zk2r029hc0k163jj0t0rhzkdn' name='CPDelicacy.Cuisine' table='[dbo].[CPDelicacy.Cuisine]' type='table' />
                </relation>
                <relation connection='sqlserver.141zk2r029hc0k163jj0t0rhzkdn' name='CPDelicacy.Register' table='[dbo].[CPDelicacy.Register]' type='table' />
              </relation>
              <relation connection='sqlserver.141zk2r029hc0k163jj0t0rhzkdn' name='CPDelicacy.App' table='[dbo].[CPDelicacy.App]' type='table' />
            </relation>
            <relation connection='sqlserver.141zk2r029hc0k163jj0t0rhzkdn' name='CPDelicacy.Accept' table='[dbo].[CPDelicacy.Accept]' type='table' />
          </relation>
          <relation connection='sqlserver.141zk2r029hc0k163jj0t0rhzkdn' name='CPDelicacy.Payment' table='[dbo].[CPDelicacy.Payment]' type='table' />
        </relation>
        <cols>
          <map key='[appId (CPDelicacy.App)]' value='[CPDelicacy.App].[appId]' />
          <map key='[appId]' value='[CPDelicacy.Register].[appId]' />
          <map key='[appName]' value='[CPDelicacy.App].[appName]' />
          <map key='[cuiId (CPDelicacy.Cuisine)]' value='[CPDelicacy.Cuisine].[cuiId]' />
          <map key='[cuiId]' value='[CPDelicacy.Offer].[cuiId]' />
          <map key='[cuiName]' value='[CPDelicacy.Cuisine].[cuiName]' />
          <map key='[district]' value='[CPDelicacy.Restaurant].[district]' />
          <map key='[payId (CPDelicacy.Payment)]' value='[CPDelicacy.Payment].[payId]' />
          <map key='[payId]' value='[CPDelicacy.Accept].[payId]' />
          <map key='[payName]' value='[CPDelicacy.Payment].[payName]' />
          <map key='[restAvgPrice]' value='[CPDelicacy.Restaurant].[restAvgPrice]' />
          <map key='[restCloseHour]' value='[CPDelicacy.Restaurant].[restCloseHour]' />
          <map key='[restClosingDay]' value='[CPDelicacy.Restaurant].[restClosingDay]' />
          <map key='[restDeliver]' value='[CPDelicacy.Restaurant].[restDeliver]' />
          <map key='[restId (CPDelicacy.Accept)]' value='[CPDelicacy.Accept].[restId]' />
          <map key='[restId (CPDelicacy.Offer)]' value='[CPDelicacy.Offer].[restId]' />
          <map key='[restId (CPDelicacy.Register)]' value='[CPDelicacy.Register].[restId]' />
          <map key='[restId]' value='[CPDelicacy.Restaurant].[restId]' />
          <map key='[restName]' value='[CPDelicacy.Restaurant].[restName]' />
          <map key='[restOpenHour]' value='[CPDelicacy.Restaurant].[restOpenHour]' />
          <map key='[restParking]' value='[CPDelicacy.Restaurant].[restParking]' />
          <map key='[restPhone]' value='[CPDelicacy.Restaurant].[restPhone]' />
          <map key='[restRate]' value='[CPDelicacy.Register].[restRate]' />
          <map key='[restVeggie]' value='[CPDelicacy.Restaurant].[restVeggie]' />
          <map key='[street]' value='[CPDelicacy.Restaurant].[street]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>restId</remote-name>
            <remote-type>129</remote-type>
            <local-name>[restId]</local-name>
            <parent-name>[CPDelicacy.Restaurant]</parent-name>
            <remote-alias>restId</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>6</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>restName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[restName]</local-name>
            <parent-name>[CPDelicacy.Restaurant]</parent-name>
            <remote-alias>restName</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>40</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>street</remote-name>
            <remote-type>129</remote-type>
            <local-name>[street]</local-name>
            <parent-name>[CPDelicacy.Restaurant]</parent-name>
            <remote-alias>street</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>district</remote-name>
            <remote-type>129</remote-type>
            <local-name>[district]</local-name>
            <parent-name>[CPDelicacy.Restaurant]</parent-name>
            <remote-alias>district</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>restAvgPrice</remote-name>
            <remote-type>129</remote-type>
            <local-name>[restAvgPrice]</local-name>
            <parent-name>[CPDelicacy.Restaurant]</parent-name>
            <remote-alias>restAvgPrice</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>restParking</remote-name>
            <remote-type>129</remote-type>
            <local-name>[restParking]</local-name>
            <parent-name>[CPDelicacy.Restaurant]</parent-name>
            <remote-alias>restParking</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>restOpenHour</remote-name>
            <remote-type>134</remote-type>
            <local-name>[restOpenHour]</local-name>
            <parent-name>[CPDelicacy.Restaurant]</parent-name>
            <remote-alias>restOpenHour</remote-alias>
            <ordinal>7</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Hour</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIME&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIME&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>restCloseHour</remote-name>
            <remote-type>134</remote-type>
            <local-name>[restCloseHour]</local-name>
            <parent-name>[CPDelicacy.Restaurant]</parent-name>
            <remote-alias>restCloseHour</remote-alias>
            <ordinal>8</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Hour</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIME&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIME&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>restClosingDay</remote-name>
            <remote-type>129</remote-type>
            <local-name>[restClosingDay]</local-name>
            <parent-name>[CPDelicacy.Restaurant]</parent-name>
            <remote-alias>restClosingDay</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>restVeggie</remote-name>
            <remote-type>129</remote-type>
            <local-name>[restVeggie]</local-name>
            <parent-name>[CPDelicacy.Restaurant]</parent-name>
            <remote-alias>restVeggie</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>20</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>restDeliver</remote-name>
            <remote-type>129</remote-type>
            <local-name>[restDeliver]</local-name>
            <parent-name>[CPDelicacy.Restaurant]</parent-name>
            <remote-alias>restDeliver</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>20</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>restPhone</remote-name>
            <remote-type>129</remote-type>
            <local-name>[restPhone]</local-name>
            <parent-name>[CPDelicacy.Restaurant]</parent-name>
            <remote-alias>restPhone</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>10</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>restId</remote-name>
            <remote-type>129</remote-type>
            <local-name>[restId (CPDelicacy.Offer)]</local-name>
            <parent-name>[CPDelicacy.Offer]</parent-name>
            <remote-alias>restId</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>6</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cuiId</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cuiId]</local-name>
            <parent-name>[CPDelicacy.Offer]</parent-name>
            <remote-alias>cuiId</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>6</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cuiId</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cuiId (CPDelicacy.Cuisine)]</local-name>
            <parent-name>[CPDelicacy.Cuisine]</parent-name>
            <remote-alias>cuiId</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>6</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cuiName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cuiName]</local-name>
            <parent-name>[CPDelicacy.Cuisine]</parent-name>
            <remote-alias>cuiName</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>30</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>restId</remote-name>
            <remote-type>129</remote-type>
            <local-name>[restId (CPDelicacy.Register)]</local-name>
            <parent-name>[CPDelicacy.Register]</parent-name>
            <remote-alias>restId</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>6</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>appId</remote-name>
            <remote-type>129</remote-type>
            <local-name>[appId]</local-name>
            <parent-name>[CPDelicacy.Register]</parent-name>
            <remote-alias>appId</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>5</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>restRate</remote-name>
            <remote-type>129</remote-type>
            <local-name>[restRate]</local-name>
            <parent-name>[CPDelicacy.Register]</parent-name>
            <remote-alias>restRate</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>5</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>appId</remote-name>
            <remote-type>129</remote-type>
            <local-name>[appId (CPDelicacy.App)]</local-name>
            <parent-name>[CPDelicacy.App]</parent-name>
            <remote-alias>appId</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>5</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>appName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[appName]</local-name>
            <parent-name>[CPDelicacy.App]</parent-name>
            <remote-alias>appName</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>20</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>restId</remote-name>
            <remote-type>129</remote-type>
            <local-name>[restId (CPDelicacy.Accept)]</local-name>
            <parent-name>[CPDelicacy.Accept]</parent-name>
            <remote-alias>restId</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>6</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>payId</remote-name>
            <remote-type>129</remote-type>
            <local-name>[payId]</local-name>
            <parent-name>[CPDelicacy.Accept]</parent-name>
            <remote-alias>payId</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>5</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>payId</remote-name>
            <remote-type>129</remote-type>
            <local-name>[payId (CPDelicacy.Payment)]</local-name>
            <parent-name>[CPDelicacy.Payment]</parent-name>
            <remote-alias>payId</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>5</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>payName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[payName]</local-name>
            <parent-name>[CPDelicacy.Payment]</parent-name>
            <remote-alias>payName</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>20</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[App Name (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[appName]' new-bin='true'>
          <bin default-name='true' value='&quot;GoogleMaps&quot;'>
            <value>&quot;GoogleMaps&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='1' datatype='real' name='[Calculation_47991543007625226]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([restRate])' />
      </column>
      <column caption='avg rate in all app' datatype='real' name='[Calculation_524106469480087552]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='' />
      </column>
      <column datatype='string' name='[Cui Name (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[cuiName]' new-bin='true'>
          <bin default-name='true' value='&quot;American&quot;'>
            <value>&quot;American&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Rest Avg Price (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[restAvgPrice]' new-bin='true'>
          <bin default-name='true' value='&quot;&quot;'>
            <value>&quot;&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;$&quot;'>
            <value>&quot;$&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;$$&quot;'>
            <value>&quot;$$&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Rest Name (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[restName]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Jumbo Jumbo Cafe College Park&quot;'>
            <value>&quot;Jumbo Jumbo Cafe College Park&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='App Id' datatype='string' name='[appId]' role='dimension' type='nominal' />
      <column caption='App Name' datatype='string' name='[appName]' role='dimension' type='nominal' />
      <column caption='Cui Id' datatype='string' name='[cuiId]' role='dimension' type='nominal' />
      <column caption='Cui Name' datatype='string' name='[cuiName]' role='dimension' type='nominal' />
      <column caption='District' datatype='string' name='[district]' role='dimension' type='nominal' />
      <column caption='Pay Id' datatype='string' name='[payId]' role='dimension' type='nominal' />
      <column caption='Pay Name' datatype='string' name='[payName]' role='dimension' type='nominal' />
      <column caption='Rest Avg Price' datatype='string' name='[restAvgPrice]' role='dimension' type='nominal' />
      <column aggregation='Hour' caption='Rest Close Hour' datatype='datetime' name='[restCloseHour]' role='dimension' type='ordinal' />
      <column caption='Rest Closing Day' datatype='string' name='[restClosingDay]' role='dimension' type='nominal' />
      <column caption='Rest Deliver' datatype='string' name='[restDeliver]' role='dimension' type='nominal' />
      <column caption='Rest Id' datatype='string' name='[restId]' role='dimension' type='nominal' />
      <column caption='Rest Name' datatype='string' name='[restName]' role='dimension' type='nominal' />
      <column aggregation='Hour' caption='Rest Open Hour' datatype='datetime' name='[restOpenHour]' role='dimension' type='ordinal' />
      <column caption='Rest Parking' datatype='string' name='[restParking]' role='dimension' type='nominal' />
      <column caption='Rest Phone' datatype='string' name='[restPhone]' role='dimension' type='nominal' />
      <column caption='Rest Rate' datatype='real' datatype-customized='true' name='[restRate]' role='measure' type='quantitative' />
      <column caption='Rest Veggie' datatype='string' name='[restVeggie]' role='dimension' type='nominal' />
      <column caption='Street' datatype='string' name='[street]' role='dimension' type='nominal' />
      <column-instance column='[appName]' derivation='None' name='[none:appName:nk]' pivot='key' type='nominal' />
      <column-instance column='[cuiName]' derivation='None' name='[none:cuiName:nk]' pivot='key' type='nominal' />
      <column-instance column='[payName]' derivation='None' name='[none:payName:nk]' pivot='key' type='nominal' />
      <column-instance column='[restName]' derivation='None' name='[none:restName:nk]' pivot='key' type='nominal' />
      <column-instance column='[restRate]' derivation='None' name='[none:restRate:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Exclusions (Rest Name,Rest Name (group),Rest Rate)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:restName:nk]' />
          <groupfilter function='level-members' level='[Rest Name (group)]' />
          <groupfilter function='level-members' level='[none:restRate:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.664789' measure-ordering='alphabetic' measure-percentage='0.335211' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Rest Avg Price (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;$&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;$$&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:appName:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;GoogleMaps&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Yelps&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:restRate:ok]' type='palette'>
            <map to='#d37295'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:cuiName:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Coffee &amp; Tea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Salad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;American&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mediterranean&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brunch&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pakistani&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ice Cream &amp; Frozen Yogurt&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Spanish&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Desserts&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sandwiches&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bubble Tea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pizza&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Korean&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Asian fusion restaurant&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mexican&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Japanese&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Caribbean&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Poke&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Indian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Steak&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iranian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Thai&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Juice Bars &amp; Smoothies&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malaysian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greek&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Seafood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chinese&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ramen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Barbecue&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Noodle&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Italian&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vietnamese&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hamburger&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Afrcan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bars&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Others&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Cui Name (group)]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Bubble Tea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Juice Bars &amp; Smoothies&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Steak&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;American&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hamburger&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portuguese&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Barbecue&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iranian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sandwiches&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cocktail Bars&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mexican&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vietnamese&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Caribbean&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Korean&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sushi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bars&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Italian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Seafood&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;French&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pizza&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hot pot&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pubs&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Diners&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pakistani&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Breakfast&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Japanese&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Afrcan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Coffee &amp; Tea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Music&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Delis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Noodle&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fast food&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peruvian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greek&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poke&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chicken Shop&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malaysian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Teppanyaki&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brunch&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jazz &amp; Blues&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spanish&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asian fusion restaurant&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ice Cream &amp; Frozen Yogurt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ramen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Desserts&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Others&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chinese&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mediterranean&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Thai&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bagels&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Indian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Salad&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:payName:nk]' type='palette'>
            <map to='#edc948'>
              <bucket>&quot;creditCard&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:restName:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Looney’s Pub&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aroy Thai Restaurant&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;sweetgreen&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hanami Japanese Restaurant&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;The Common&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Northwest Chinese Food&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LOTSA Stone Fired Pizza(College Park)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jasons Deli&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;The Original Ledo Restaurant&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Potomac Pizza - College Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Blaze Pizza&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Taco Bell&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PaisaNos&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Krazi Kebob&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;The Red Boat Asian Fusion&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NuVegan Cafe - College Park&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Olive Garden Italian Restaurant&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pho DLite&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shanghai Cafe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nandos Peri-Peri&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;LàTAO&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wings Over College Park&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CAVA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;College Park Grill&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Taqueria Habanero&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Outback Steakhouse&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Noodles and Company&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chipotle Mexican Grill&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;The Board and Brew&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[App Name (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;GoogleMaps &amp; Yelps&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GoogleMaps&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yelps&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name=' 2.Review Rate for Each Restaurant'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Calibri,sans-serif' fontsize='14'>What are the average review rate for each restaurant for each app and all app?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CPDelicacy.Restaurant+ (BUDT758_DB_0504_05)' name='federated.0kff4bj0qapr1y1b0jz4z0o44gi5' />
          </datasources>
          <datasource-dependencies datasource='federated.0kff4bj0qapr1y1b0jz4z0o44gi5'>
            <column datatype='string' name='[App Name (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[appName]' new-bin='true'>
                <bin default-name='true' value='&quot;GoogleMaps&quot;'>
                  <value>&quot;GoogleMaps&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='App Name' datatype='string' name='[appName]' role='dimension' type='nominal' />
            <column-instance column='[restRate]' derivation='Avg' name='[avg:restRate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[appName]' derivation='None' name='[none:appName:nk]' pivot='key' type='nominal' />
            <column-instance column='[restName]' derivation='None' name='[none:restName:nk]' pivot='key' type='nominal' />
            <column caption='Rest Name' datatype='string' name='[restName]' role='dimension' type='nominal' />
            <column caption='Rest Rate' datatype='real' datatype-customized='true' name='[restRate]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:appName:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:appName:nk]' />
              <groupfilter function='member' level='[none:appName:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:appName:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[avg:restRate:qk]' />
              <color column='[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[App Name (group)]' />
              <lod column='[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:appName:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:restName:nk]</rows>
        <cols>([federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:appName:nk] * [federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[avg:restRate:qk])</cols>
      </table>
      <simple-id uuid='{637C712D-6628-4B9D-8668-211CC15E6490}' />
    </worksheet>
    <worksheet name='1.Restaurant with low price'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Calibri,sans-serif' fontsize='14'>What are restaurants in each type(cuisine)  can be recommended to customers who have a low budget($)?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CPDelicacy.Restaurant+ (BUDT758_DB_0504_05)' name='federated.0kff4bj0qapr1y1b0jz4z0o44gi5' />
          </datasources>
          <datasource-dependencies datasource='federated.0kff4bj0qapr1y1b0jz4z0o44gi5'>
            <column datatype='string' name='[Cui Name (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[cuiName]' new-bin='true'>
                <bin default-name='true' value='&quot;American&quot;'>
                  <value>&quot;American&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Rest Avg Price (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[restAvgPrice]' new-bin='true'>
                <bin default-name='true' value='&quot;&quot;'>
                  <value>&quot;&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;$&quot;'>
                  <value>&quot;$&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;$$&quot;'>
                  <value>&quot;$$&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[restName]' derivation='CountD' name='[ctd:restName:qk]' pivot='key' type='quantitative' />
            <column caption='Cui Name' datatype='string' name='[cuiName]' role='dimension' type='nominal' />
            <column-instance column='[restName]' derivation='None' name='[none:restName:nk]' pivot='key' type='nominal' />
            <column caption='Rest Avg Price' datatype='string' name='[restAvgPrice]' role='dimension' type='nominal' />
            <column caption='Rest Name' datatype='string' name='[restName]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[Rest Avg Price (group)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Rest Avg Price (group)]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[Rest Avg Price (group)]' member='%null%' />
                <groupfilter function='member' level='[Rest Avg Price (group)]' member='&quot;&quot;' />
                <groupfilter function='member' level='[Rest Avg Price (group)]' member='&quot;$$&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[Rest Avg Price (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:restName:nk]' value='9' />
            <format attr='font-size' field='[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[ctd:restName:qk]' value='9' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Square' />
            <encodings>
              <size column='[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[ctd:restName:qk]' />
              <color column='[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[Cui Name (group)]' />
              <text column='[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:restName:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{61D6EFDE-5BCB-47CF-BC89-6A032A80FAC8}' />
    </worksheet>
    <worksheet name='2.2Review Rate for Each Restaurant '>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Calibri,sans-serif' fontsize='14'>What are the average review rate for each restaurant for each app and all app?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CPDelicacy.Restaurant+ (BUDT758_DB_0504_05)' name='federated.0kff4bj0qapr1y1b0jz4z0o44gi5' />
          </datasources>
          <datasource-dependencies datasource='federated.0kff4bj0qapr1y1b0jz4z0o44gi5'>
            <column-instance column='[restRate]' derivation='Avg' name='[avg:restRate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[restName]' derivation='None' name='[none:restName:nk]' pivot='key' type='nominal' />
            <column caption='Rest Name' datatype='string' name='[restName]' role='dimension' type='nominal' />
            <column caption='Rest Rate' datatype='real' datatype-customized='true' name='[restRate]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:restName:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:restName:nk]' />
              <groupfilter function='member' level='[none:restName:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:restName:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='right' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[avg:restRate:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[avg:restRate:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#c290b4' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:restName:nk]</rows>
        <cols>[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[avg:restRate:qk]</cols>
      </table>
      <simple-id uuid='{2522BF64-87B6-4F31-A2AD-702D1CF86DC1}' />
    </worksheet>
    <worksheet name='3.Restaurant for each cuisine'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Calibri,sans-serif' fontsize='14'>What choices do a customer have in terms of choosing a certain cuisine?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CPDelicacy.Restaurant+ (BUDT758_DB_0504_05)' name='federated.0kff4bj0qapr1y1b0jz4z0o44gi5' />
          </datasources>
          <datasource-dependencies datasource='federated.0kff4bj0qapr1y1b0jz4z0o44gi5'>
            <column datatype='string' name='[Cui Name (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[cuiName]' new-bin='true'>
                <bin default-name='true' value='&quot;American&quot;'>
                  <value>&quot;American&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[restId]' derivation='CountD' name='[ctd:restId:qk]' pivot='key' type='quantitative' />
            <column caption='Cui Name' datatype='string' name='[cuiName]' role='dimension' type='nominal' />
            <column-instance column='[restName]' derivation='None' name='[none:restName:nk]' pivot='key' type='nominal' />
            <column caption='Rest Id' datatype='string' name='[restId]' role='dimension' type='nominal' />
            <column caption='Rest Name' datatype='string' name='[restName]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='1105' />
            <format attr='height' value='632' />
            <format attr='wrap' value='on' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='7' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[ctd:restId:qk]' />
              <color column='[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[Cui Name (group)]' />
              <text column='[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:restName:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{B058BB2B-5652-41DA-9456-00A0A3535A4C}' />
    </worksheet>
    <worksheet name='4.Veggie customer without card'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Calibri,sans-serif' fontsize='14'>For a vegetarian customer who forgets to bring any cash, which restaurants can he go? </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CPDelicacy.Restaurant+ (BUDT758_DB_0504_05)' name='federated.0kff4bj0qapr1y1b0jz4z0o44gi5' />
          </datasources>
          <datasource-dependencies datasource='federated.0kff4bj0qapr1y1b0jz4z0o44gi5'>
            <column-instance column='[restName]' derivation='CountD' name='[ctd:restName:qk]' pivot='key' type='quantitative' />
            <column-instance column='[payName]' derivation='None' name='[none:payName:nk]' pivot='key' type='nominal' />
            <column-instance column='[restName]' derivation='None' name='[none:restName:nk]' pivot='key' type='nominal' />
            <column-instance column='[restVeggie]' derivation='None' name='[none:restVeggie:nk]' pivot='key' type='nominal' />
            <column caption='Pay Name' datatype='string' name='[payName]' role='dimension' type='nominal' />
            <column caption='Rest Name' datatype='string' name='[restName]' role='dimension' type='nominal' />
            <column caption='Rest Veggie' datatype='string' name='[restVeggie]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:payName:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:payName:nk]' />
              <groupfilter function='member' level='[none:payName:nk]' member='&quot;cashPayment&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:restVeggie:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:restVeggie:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:restVeggie:nk]' member='%null%' />
                <groupfilter function='member' level='[none:restVeggie:nk]' member='&quot;No&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:restVeggie:nk]</column>
            <column>[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:payName:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[ctd:restName:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:restName:nk]' />
              <size column='[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[ctd:restName:qk]' />
              <text column='[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:payName:nk]' />
              <text column='[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:restName:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{03395A3B-8196-4E2D-B084-3149BADB6FB9}' />
    </worksheet>
    <worksheet name='5.Veggie chinese customer'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Calibri,sans-serif' fontsize='14'>What restaurants are recommended to a veggie customer who drives to have lunch in a chinese restaurant and consider restaurant rate first and then price? </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CPDelicacy.Restaurant+ (BUDT758_DB_0504_05)' name='federated.0kff4bj0qapr1y1b0jz4z0o44gi5' />
          </datasources>
          <datasource-dependencies datasource='federated.0kff4bj0qapr1y1b0jz4z0o44gi5'>
            <column datatype='string' name='[Cui Name (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[cuiName]' new-bin='true'>
                <bin default-name='true' value='&quot;American&quot;'>
                  <value>&quot;American&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[restRate]' derivation='Avg' name='[avg:restRate:qk]' pivot='key' type='quantitative' />
            <column caption='Cui Name' datatype='string' name='[cuiName]' role='dimension' type='nominal' />
            <column-instance column='[restName]' derivation='None' name='[none:restName:nk]' pivot='key' type='nominal' />
            <column-instance column='[restParking]' derivation='None' name='[none:restParking:nk]' pivot='key' type='nominal' />
            <column-instance column='[restVeggie]' derivation='None' name='[none:restVeggie:nk]' pivot='key' type='nominal' />
            <column caption='Rest Name' datatype='string' name='[restName]' role='dimension' type='nominal' />
            <column caption='Rest Parking' datatype='string' name='[restParking]' role='dimension' type='nominal' />
            <column caption='Rest Rate' datatype='real' datatype-customized='true' name='[restRate]' role='measure' type='quantitative' />
            <column caption='Rest Veggie' datatype='string' name='[restVeggie]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[Cui Name (group)]'>
            <groupfilter function='member' level='[Cui Name (group)]' member='&quot;Chinese&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:restName:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:restName:nk]' />
              <groupfilter function='member' level='[none:restName:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:restParking:nk]'>
            <groupfilter function='member' level='[none:restParking:nk]' member='&quot;Yes&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:restVeggie:nk]'>
            <groupfilter function='member' level='[none:restVeggie:nk]' member='&quot;Yes&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:restName:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[avg:restRate:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:restName:nk]</column>
            <column>[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:restVeggie:nk]</column>
            <column>[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:restParking:nk]</column>
            <column>[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[Cui Name (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='right' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[avg:restRate:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[avg:restRate:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#8cd17d' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:restName:nk]</rows>
        <cols>[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[avg:restRate:qk]</cols>
      </table>
      <simple-id uuid='{1DF3DAF7-0C64-43D9-ACD1-CF322C172CC1}' />
    </worksheet>
    <worksheet name='6.restaurant cuisine and rate'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{4F3EC35B-922C-4409-8B59-47AF0FE51EEC}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='1.Restaurant with low price'>
      <cards>
        <edge name='left'>
          <strip size='176'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='127'>
            <card pane-specification-id='0' param='[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[Cui Name (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[Cui Name (group)]</field>
            <field>[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[Rest Avg Price (group)]</field>
            <field>[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[Rest Name (group)]</field>
            <field>[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:cuiName:nk]</field>
            <field>[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:restId (CPDelicacy.Offer):nk]</field>
            <field>[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:restId:nk]</field>
            <field>[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:restName:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FAFB97FE-DA83-43A5-8980-939C0BA436E0}' />
    </window>
    <window class='worksheet' name=' 2.Review Rate for Each Restaurant'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[App Name (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[App Name (group) 1]</field>
            <field>[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[App Name (group)]</field>
            <field>[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:appId:nk]</field>
            <field>[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:appName:nk]</field>
            <field>[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:restName:nk]</field>
            <field>[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:restRate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DF29E437-4DB2-47C4-8EE9-1E10E881D4F0}' />
    </window>
    <window class='worksheet' name='2.2Review Rate for Each Restaurant '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:restName:nk]</field>
                </fields>
                <multibucket>
                  <bucket>%null%</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[avg:restRate:qk]</field>
            <field>[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:restName:nk]</field>
            <field>[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:restParking:nk]</field>
            <field>[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:restRate:ok]</field>
            <field>[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:restVeggie:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{90DED5F5-2553-42C9-A9EF-4D3E398F09BC}' />
    </window>
    <window class='worksheet' name='3.Restaurant for each cuisine'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[Cui Name (group)]</field>
            <field>[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:cuiName:nk]</field>
            <field>[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:restId:nk]</field>
            <field>[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:restName:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EA530A13-5A5D-42A0-9C30-7C969305FD5E}' />
    </window>
    <window class='worksheet' name='4.Veggie customer without card'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:restName:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[Cui Name (group)]</field>
            <field>[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:payName:nk]</field>
            <field>[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:restName:nk]</field>
            <field>[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:restVeggie:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EC168BD9-DE99-4B49-BF11-A4506EAB07AC}' />
    </window>
    <window class='worksheet' name='5.Veggie chinese customer'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[Cui Name (group)]</field>
            <field>[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[avg:restRate:qk]</field>
            <field>[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:restAvgPrice:nk]</field>
            <field>[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:restName:nk]</field>
            <field>[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:restParking:nk]</field>
            <field>[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:restRate:ok]</field>
            <field>[federated.0kff4bj0qapr1y1b0jz4z0o44gi5].[none:restVeggie:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C9C0005F-FA19-427E-94AF-0ECF64B7247C}' />
    </window>
    <window class='worksheet' maximized='true' name='6.restaurant cuisine and rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F29B1827-DA3A-4A14-911D-422CB32E57DE}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name=' 2.Review Rate for Each Restaurant' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='1.Restaurant with low price' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='2.2Review Rate for Each Restaurant ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='3.Restaurant for each cuisine' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='4.Veggie customer without card' width='192'>
      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
    </thumbnail>
    <thumbnail height='127' name='5.Veggie chinese customer' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='6.restaurant cuisine and rate' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
